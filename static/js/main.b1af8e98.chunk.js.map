{"version":3,"sources":["components/nluresponse/nluresponse.js","components/nlu/nlu.js","components/dialog/dialog.js","components/app/app.js","serviceWorker.js","index.js"],"names":["NLUResponse","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","activeTab","tab","setState","_this2","entities","react_default","a","createElement","Nav","tabs","NavItem","NavLink","className","classnames","active","onClick","href","TabContent","TabPane","tabId","Row","Col","sm","Table","hover","map","entity","idx","key","entity_value","entity_type","parseFloat","confidence_score","toFixed","intent","intent_type","Component","NLU","startUtt","urlStr","handleUtteranceChange","handleSubmitFrom","nluResponse","end","start","text","elem","utt","target","value","charAt","length","utterance","preventDefault","url","URL","params","search","URLSearchParams","fetch","method","mode","then","res","status","json","response","catch","error","console","_this3","Container","Form","onSubmit","FormGroup","Input","type","name","id","onChange","placeholder","Button","color","nluresponse","Message","isMe","MessageList","scrollToBottom","messagesEnd","scrollIntoView","behavior","messageList","messages","message","style","float","clear","ref","el","Dialog","serverNotAvailableMsg","sessionExpiredMsg","restoreSessionWelcomeMsg","stopDialogVariable","apiUrl","concat","handleResponse","stopDialog","dialog","apiResponse","_this4","newDialog","toConsumableArray","rspOutputs","outputs","forEach","output","push","dialog_state","context_variables","_this5","payload","input","body","JSON","stringify","headers","Content-Type","credentials","new_dialog","_this6","dialog_MessageList","autoComplete","disabled","App","log","process","toggleNavbar","collapsed","react_router_dom","basename","Navbar","light","expand","NavbarBrand","tag","Link","to","NavbarToggler","Collapse","isOpen","navbar","right","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","app_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1af8e98.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Table,\n  TabContent, TabPane\n} from 'reactstrap';\nimport classnames from 'classnames';\n\n\nclass NLUResponse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    let entities = this.props.entities || []\n    return (\n      <div>\n        <p></p>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n              href=\"#\"\n            >\n            Entities\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n              href=\"#\"\n            >\n            Intention\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Value</th>\n                      <th>Type Name</th>\n                      <th>Confidence Score</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {entities.map((entity, idx) => {\n                      return (\n                      <tr key={idx}>\n                        <td>{entity.entity_value}</td>\n                        <td>{entity.entity_type}</td>\n                        <td>{parseFloat(entity.confidence_score).toFixed(3)}</td>\n                      </tr>)\n                    })}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Type</th>\n                      <th>Confidence Score</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr key=\"0\">\n                      <td>{this.props.intent.intent_type}</td>\n                      <td>{parseFloat(this.props.intent.confidence_score).toFixed(3)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n        \n      </div>\n    );\n  }\n}\n\nexport default NLUResponse;\n","import React, { Component } from 'react';\n\nimport NLUResponse from '../nluresponse/nluresponse'\nimport {\n  Container,\n  Row,\n  Col,\n  Form, FormGroup, Input, Button\n} from 'reactstrap';\n\nimport './nlu.css';\n\nclass NLU extends Component {\n  constructor(props) {\n    super(props);\n    this.startUtt = \"please show me flights from pittsburgh to new york city on wednesday morning serving breakfast\";\n    this.urlStr = 'https://cionlu.herokuapp.com/api/v1/nlu';  // 'http://localhost:5000/api/v1/nlu';\n\n    this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n    this.handleSubmitFrom = this.handleSubmitFrom.bind(this);\n\n    this.state = {\n      nluResponse: {\n        \"entities\": [\n          {\n            \"confidence_score\": 0.0,\n            \"end\": null,\n            \"entity_type\": \"t1\",\n            \"entity_value\": \"slot1\",\n            \"start\": null\n          }\n        ],\n        \"intent\": {\n            \"confidence_score\": 0.0,\n            \"intent_type\": \"t1\"\n        },\n        text: \"\"\n      }\n    };\n  }\n\n  handleUtteranceChange(elem) {\n    let utt = elem.target.value;\n    // check if enter was hitted\n    if (utt.charAt(utt.length-1) === '\\n')\n      this.handleSubmitFrom(elem);\n    else\n      this.setState({utterance: elem.target.value});\n  }\n\n  handleSubmitFrom(elem) {\n    elem.preventDefault();\n\n    let url = new URL(this.urlStr);\n    let params = {utterance: this.state.utterance};\n    url.search = new URLSearchParams(params);\n\n    fetch(url, {\n      method: 'GET',\n      mode: 'cors'\n    })\n    .then(res => {\n      if (res.status !== 200)\n        return undefined\n      return res.json();\n    })\n    .then(response => {      \n      if (response)\n        this.setState({nluResponse: response})\n    })\n    .catch(error => console.error('Error:', error));\n  }\n\n  componentDidMount() {\n    \n    this.setState({utterance: this.startUtt});\n\n    let url = new URL(this.urlStr);\n    let params = {utterance: this.startUtt};\n    url.search = new URLSearchParams(params);\n\n    fetch(url, {\n      method: 'GET'\n    })\n    .then(res => {\n      if (res.status !== 200)\n        return undefined\n      return res.json();\n    })\n    .then(response => {\n      if (response)\n        this.setState({nluResponse: response})\n    })\n    .catch(error => console.error('Error:', error));\n  }\n\n  render() {\n    return (\n      <div>\n      <Container className=\"nlu-content\">\n        <Row>\n          <Col>\n            <h5>State something</h5>\n            <Form onSubmit={this.handleSubmitFrom}>\n              <FormGroup>\n                <Input type=\"textarea\" name=\"utterance\" id=\"utterance\"\n                  value={this.state.utterance}\n                  onChange={this.handleUtteranceChange} \n                  placeholder={this.startUtt} \n                  />\n                <Button className=\"float-right submit-btn\" color=\"primary\" type=\"submit\">Analyze</Button>\n              </FormGroup>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5>See Language Understanding in action</h5>\n            <NLUResponse\n              intent={this.state.nluResponse.intent}\n              entities={this.state.nluResponse.entities}\n            />\n          </Col>\n        </Row>\n      </Container>\n      </div>\n    );\n  }\n}\n\nexport default NLU;\n","import React, { Component } from 'react';\nimport './dialog.css';\n\n\nfunction Message(props) {\n\n  if (props.isMe === true)\n    return (\n      <div className=\"row justify-content-end\">\n        <div className=\"card message-card bg-lightblue m-1\">\n            <div className=\"card-body p-2\">\n                <span className=\"mx-2\">{props.value}</span>\n            </div>\n        </div>\n      </div>\n    );\n  return (\n    <div className=\"row\">\n      <div className=\"card message-card m-1\">\n          <div className=\"card-body p-2\">\n              <span className=\"mx-2\">{props.value}</span>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nclass MessageList extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n  }\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n  \n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  \n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    const objMessages = this.props.messages\n    let messageList = objMessages.map((message, idx) => \n      <Message value={message.text} isMe={message.isMe} key={idx}/>\n    );\n    return (\n      <div className=\"container-fluid message-scroll\">\n        {messageList}\n        <div style={{ float:\"left\", clear: \"both\" }}\n            ref={(el) => { this.messagesEnd = el; }}>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nclass Dialog extends Component {\n  constructor(props) {\n    super(props);\n    this.serverNotAvailableMsg = \"Incerc sa stabilesc conexiunea cu serverul de dialog, incearca te rog peste cateva momente\";\n    this.sessionExpiredMsg = \"Din cauza inactivitatii sesiunea de dialog s-a incheiat, voi deschide o noua conversatie.\"\n    this.restoreSessionWelcomeMsg = \"Bine ai revenit! Te pot ajuta cu trimiterea facturii curente sau cu actualizarea indexului. Scrie-mi daca mai ai nevoie de mine!\"\n    this.stopDialogVariable = \"$leg_op\"\n\n    this.startUtt = \"...\";\n    // let host = 'http://0.0.0.0:5000';\n    let host = 'https://cio-dialogsys.herokuapp.com';\n    this.apiUrl = `${host}/api/v1`;\n    this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n    this.handleSubmitFrom = this.handleSubmitFrom.bind(this);\n    this.handleResponse = this.handleResponse.bind(this);\n\n\n    this.state = {\n      stopDialog: false,\n      dialog: [],\n      apiResponse: {},\n      utterance: \"\"\n    };\n  }\n\n  handleResponse(response) {      \n    if (response)  {\n      this.setState(state => {\n        let newDialog = [...state.dialog];\n        let rspOutputs = [];\n        let stopDialog = false;\n        response.outputs.forEach(output => {\n          rspOutputs.push({\n            isMe: false,\n            text: output\n          });\n        });\n        \n        // prompt only first response in case of stopDialog\n        // todo: Fix in dialog engine\n        stopDialog = response.dialog_state.context_variables[this.stopDialogVariable];\n        if (stopDialog && rspOutputs.length > 0)\n          newDialog.push(rspOutputs[0])\n        else\n          newDialog = newDialog.concat(rspOutputs)\n\n        return {\n          apiResponse: response,            \n          dialog: newDialog,\n          stopDialog: stopDialog\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    let url = new URL(this.apiUrl + \"/message\");\n    let payload = {\n      \"input\": {\n        \"text\": this.state.utterance\n      }\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(payload),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      mode: 'cors'\n    })\n    .then(res => {\n      if (res.status !== 200)\n        return undefined\n      return res.json();\n    })\n    .then(this.handleResponse)\n    .catch(error => {\n      this.setState(state => {\n        let new_dialog = [...state.dialog]\n        new_dialog.push({\n          isMe: false,\n          text: this.serverNotAvailableMsg\n        })\n        return {\n          dialog: new_dialog\n        }\n      });\n      console.error('Error:', error)\n    });\n  }\n\n  handleUtteranceChange(elem) {\n    let utt = elem.target.value;\n    // check if enter was hitted\n    if (utt.charAt(utt.length-1) === '\\n')\n      this.handleSubmitFrom(elem);\n    else\n      this.setState({utterance: elem.target.value});\n  }\n\n  handleSubmitFrom(elem) {\n    elem.preventDefault();\n    this.setState({utterance: \"\"})\n\n    let url = new URL(`${this.apiUrl}/message`);\n    // add user utterance to dialog list\n    this.setState(state => {\n      let new_dialog = [...state.dialog] \n      new_dialog.push({\n        isMe: true,\n        text: this.state.utterance\n      });\n      return { dialog: new_dialog }\n    });\n\n    let payload = {\n      \"input\": {\n        \"text\": this.state.utterance\n      },\n      \"dialog_state\": this.state.apiResponse.dialog_state\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(payload),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      mode: 'cors'\n    })\n    .then(res => {\n      if (res.status !== 200) {\n        return undefined\n      }\n      return res.json();\n    })\n    .then(this.handleResponse)\n    .catch(error => {\n      this.setState(state => {\n        let new_dialog = [...state.dialog]\n        new_dialog.push({\n          isMe: false,\n          text: this.serverNotAvailableMsg\n        })\n        return {\n          dialog: new_dialog\n        }\n      });\n      console.error('Error:', error)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5>My Virtual Asisstant</h5>\n                    </div>\n                    <div className=\"card-body d-flex flex-column p-1\">\n                        <MessageList messages={this.state.dialog} />\n                        <form onSubmit={this.handleSubmitFrom} className=\"mt-3 p-1\">\n                          <div className=\"input-group\">\n                            <input type=\"text\" className=\"form-control\" id=\"utterance\" autoComplete=\"off\"\n                              value={this.state.utterance}\n                              onChange={this.handleUtteranceChange} \n                              placeholder={this.startUtt}\n                            />\n                            <div className=\"input-group-prepend\">\n                              <button type=\"submit\" className=\"btn btn-primary\" disabled={this.state.stopDialog}>Send</button>\n                            </div>\n                          </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dialog;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nimport './app.css';\nimport NLU from '../nlu/nlu'\nimport Dialog from '../dialog/dialog'\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(process.env.PUBLIC_URL);\n    \n    this.toggleNavbar = this.toggleNavbar.bind(this);\n\n    this.state = {\n      collapsed: true,\n    }\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n    // CIO Dialog System\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navbar color=\"faded\" light expand=\"md\">\n            <NavbarBrand tag={Link} to=\"/\" className=\"mr-auto brand-title\">CIO Dialog System</NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse isOpen={!this.state.collapsed} navbar>\n              <Nav navbar right=\"true\" className=\"ml-auto\">\n                <NavItem>\n                  <NavLink tag={Link} to=\"/\">Assistant</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/nlu\">NLU</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n\n          {/* main container */}\n          <Switch>\n            <Route path=\"/nlu\" component={NLU} />\n            <Route path=\"/\" component={Dialog} />\n          </Switch>\n\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}